Memory Layout
	-Stack
	-Heap Memory
	
	<program-name> ----parms
	-dev
	-QA
	-UAT/Pre-Prod
	-PROD
	
1.Text Segment==> where the executable code of the program is stored.
2.Data Segment==>Stores global and static varibles that are created by a progarmmer
			int a=10; //intialized data segment
			int a; (BSS)=> block started by symbol
3.Heap Segment==> int *ptr=(int *) malloc(sizeof(int)*10)
4.Stack Segment=> void function()
{

int local_val=10;//stored in the stack
}

lm==> loaded modules
!address=> view your memmory layout of the program
k=> view stack information
!heap=>view heap allocations

Activations Records

--> Its a Contiguous block of the storage that manges information required by a single execution of procedure


-Activation record includes

	-Return values
	-Patameter list
	-Control links dynamic
	-Access links static
	-Saved Machine status
	-Local Data
	
	
	==> PROLOG==>Setup of the stack frame
	==> B-LOGIC==>Function logix execution
	==> EPILOG==> Stack Cleanup before returning 
	
	pointer to COnstant vs Constant Pointer
	
	1. A pointer to a constant allows modification the pointer, but not the data it points to.
	2. COnstant Pointer allows modification in data,but not the pointer itself
	
	
	-memset() and memcpy()
	
	
	